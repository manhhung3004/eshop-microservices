replicaCount: 1
image:
  repository: 192.168.120.24/eshop/eshop-catalog
  pullPolicy: IfNotPresent
  tag: 8d463f919e105e0d582ff09b9508c0272f4f21b1
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
podAnnotations: {}
podSecurityContext:
  fsGroup: 1000
securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
service:
  type: ClusterIP
  port: 80
  endpoint: "http://retail-eshop-catalog.retail-eshop.svc.cluster.local"
resources:
  limits:
    memory: 256Mi
  requests:
    cpu: 128m
    memory: 256Mi
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
nodeSelector:
  kubernetes.io/hostname: k8s-worker1
tolerations: []
affinity: {}
topologySpreadConstraints: []
metrics:
  enabled: true
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
configMap:
  create: true
  name:
mysql:
  create: true
  endpoint: "retail-eshop-catalog-mysql.retail-eshop.svc.cluster.local"
  database: catalog
  secret:
    create: true
    name: catalog-db
    username: catalog
    password: "123"
  reader:
    endpoint: "retail-eshop-catalog-mysql.retail-eshop.svc.cluster.local"
  image:
    repository: public.ecr.aws/docker/library/mysql
    pullPolicy: IfNotPresent
    tag: "8.0"
  service:
    type: ClusterIP
    port: 3306
  podAnnotations: {}
  nodeSelector:
    kubernetes.io/hostname: k8s-worker1
  tolerations: []
  affinity: {}
  persistentVolume:
    enabled: true
    annotations: {}
    labels: {}
    accessModes:
      - ReadWriteOnce
    size: 5Gi
    storageClass: "longhorn"
securityGroups:
  create: false
  securityGroupIds: []
opentelemetry:
  enabled: false
  instrumentation: ""
podDisruptionBudget:
  enabled: false
  minAvailable: 2
  maxUnavailable: 1
